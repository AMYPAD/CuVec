name: Test
on:
  push:
  pull_request:
  schedule: [{cron: '30 23 * * 6'}]  # M H d m w (Sat at 23:30)
jobs:
  check:
    if: github.event_name != 'pull_request' || !contains('OWNER,MEMBER,COLLABORATOR', github.event.pull_request.author_association)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: set PYSHA
      run: echo "PYSHA=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit
        key: pre-commit|${{ env.PYSHA }}|${{ hashFiles('.pre-commit-config.yaml') }}
    - name: dependencies
      run: |
        pip install -U pre-commit
        sudo apt-get install -yqq clang-format
    - uses: reviewdog/action-setup@v1
    - if: github.event_name == 'push' || github.event_name == 'pull_request'
      name: comment
      run: |
        if [[ $EVENT == pull_request ]]; then
          REPORTER=github-pr-review
        else
          REPORTER=github-check
        fi
        pre-commit run -a todo | reviewdog -efm="%f:%l: %m" -name=TODO -tee -reporter=$REPORTER -filter-mode nofilter
        pre-commit run -a flake8 | reviewdog -f=pep8 -name=flake8 -tee -reporter=$REPORTER -filter-mode nofilter
        pre-commit run -a mypy | reviewdog -efm="%f:%l: %m" -name=mypy -tee -reporter=$REPORTER -filter-mode nofilter
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        EVENT: ${{ github.event_name }}
    - run: pre-commit run -a --show-diff-on-failure
  test:
    if: github.event_name != 'pull_request' || !contains('OWNER,MEMBER,COLLABORATOR', github.event.pull_request.author_association)
    name: py${{ matrix.python }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.7, 3.11]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
    - name: pip install -U -e .[dev]
      run: make CXX_FLAGS='' deps-build build-editable deps-run
    - run: make test
    - uses: codecov/codecov-action@v4
    - name: compile -Wall
      run: make build-wheel
  cuda:
    if: github.event_name != 'pull_request' || !contains('OWNER,MEMBER,COLLABORATOR', github.event.pull_request.author_association)
    name: CUDA py${{ matrix.python }}
    runs-on: [self-hosted, cuda, python]
    strategy:
      matrix:
        python: [3.7, 3.11]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Run setup-python
      run: setup-python -p${{ matrix.python }} 'cuda-version<12' cupy
    - name: pip install -U -e .[dev]
      run: make CXX_FLAGS='' deps-build build-editable deps-run
    - run: make test
    - uses: codecov/codecov-action@v4
    - name: compile -Wall
      run: make CUDA_ARCHITECTURES=all build-wheel
    - name: Post Run setup-python
      run: setup-python -p${{ matrix.python }} -Dr
      if: ${{ always() }}
  deploy:
    needs: [check, test, cuda]
    name: PyPI Deploy
    environment: pypi
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GH_TOKEN || github.token }}
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - id: dist
      uses: casperdcl/deploy-pypi@v2
      with:
        build: -s
        upload: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags') }}
    - if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      name: Release
      run: |
        changelog=$(git log --pretty='format:%d%n- %s%n%b---' $(git tag --sort=v:refname | tail -n2 | head -n1)..HEAD)
        tag="${GITHUB_REF#refs/tags/}"
        gh release create --title "CuVec $tag stable" --draft --notes "$changelog" "$tag" dist/${{ steps.dist.outputs.targz }}
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN || github.token }}
    - name: Docs
      run: |
        pushd docs
        pip install -U -r requirements.txt
        PYTHONPATH=. pydoc-markdown --build --site-dir=../../../dist/site
        popd
    - if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags') || github.event_name == 'workflow_dispatch' }}
      uses: casperdcl/push-dir@v1
      with:
        message: update static site
        branch: gh-pages
        history: false
        dir: dist/site
        nojekyll: true
        name: AMYPAD[bot]
        email: 74983049+amypad-bot@users.noreply.github.com
